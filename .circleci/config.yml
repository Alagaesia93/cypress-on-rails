version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/ruby:2.4.1-node-browsers

    working_directory: ~/repo

    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

#      # Restore bundle cache
#      - restore_cache:
#          keys:
#            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#            - rails-demo-bundle-v2-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

#      # Store bundle cache
#      - save_cache:
#          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#          paths:
#            - vendor/bundle

#      # Only necessary if app uses webpacker or yarn in some other way
#      - restore_cache:
#          keys:
#            - rails-demo-yarn-{{ checksum "yarn.lock" }}
#            - rails-demo-yarn-

#      - run:
#          name: Yarn Install
#          command: yarn install --cache-folder ~/.cache/yarn
#
#      # Store yarn / webpacker cache
#      - save_cache:
#          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
#          paths:
#            - ~/.cache/yarn

      - run:
          name: run
          command: bundle exec rake
      # Run rspec in parallel
#      - type: shell
#        command: |
#          bundle exec rspec --profile 10 \
#                            --format RspecJunitFormatter \
#                            --out test_results/rspec.xml \
#                            --format progress \
#                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)


      # Save test results for timing analysis
#      - store_test_results:
#          path: test_results